package usedrpc

import (
	"math/big"
)

type UsechainAPI interface {
	Web3ClientVersion() (string, error)
	Web3Sha3(data []byte) (string, error)
	NetVersion() (string, error)
	NetListening() (bool, error)
	NetPeerCount() (int, error)
	UseProtocolVersion() (string, error)
	UseSyncing() (*Syncing, error)
	UseCoinbase() (string, error)
	UseMining() (bool, error)
	UseHashrate() (int, error)
	UseGasPrice() (big.Int, error)
	UseAccounts() ([]string, error)
	UseBlockNumber() (int, error)
	UseGetBalance(address, block string) (big.Int, error)
	UseGetStorageAt(data string, position int, tag string) (string, error)
	UseGetTransactionCount(address, block string) (int, error)
	UseGetBlockTransactionCountByHash(hash string) (int, error)
	UseGetBlockTransactionCountByNumber(number int) (int, error)
	UseGetUncleCountByBlockHash(hash string) (int, error)
	UseGetUncleCountByBlockNumber(number int) (int, error)
	UseGetCode(address, block string) (string, error)
	UseSign(address, data string) (string, error)
	UseSendTransaction(transaction T) (string, error)
	UseSendRawTransaction(data string) (string, error)
	UseCall(transaction T, tag string) (string, error)
	UseEstimateGas(transaction T) (int, error)
	UseGetBlockByHash(hash string, withTransactions bool) (*Block, error)
	UseGetBlockByNumber(number int, withTransactions bool) (*Block, error)
	UseGetTransactionByHash(hash string) (*Transaction, error)
	UseGetTransactionByBlockHashAndIndex(blockHash string, transactionIndex int) (*Transaction, error)
	UseGetTransactionByBlockNumberAndIndex(blockNumber, transactionIndex int) (*Transaction, error)
	UseGetTransactionReceipt(hash string) (*TransactionReceipt, error)
	UseGetCompilers() ([]string, error)
	UseNewFilter(params FilterParams) (string, error)
	UseNewBlockFilter() (string, error)
	UseNewPendingTransactionFilter() (string, error)
	UseUninstallFilter(filterID string) (bool, error)
	UseGetFilterChanges(filterID string) ([]Log, error)
	UseGetFilterLogs(filterID string) ([]Log, error)
	UseGetLogs(params FilterParams) ([]Log, error)
}

var _ UsechainAPI = (*UseRPC)(nil)
